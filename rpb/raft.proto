syntax = "proto3";
package rpb;

service Raft {
    rpc AppendEntries(AppendRequest) returns (Response);
    rpc RequestVote(VoteRequest) returns (Response);


    rpc Join(Node) returns (Nodes);
    rpc ClusterState(Nodes) returns (Nodes);
    rpc Leave(Node) returns (Ack);
}

message Nodes {
    uint64 senderID = 1;
    repeated Node nodes = 2;
}

message AppendRequest {
    // sender ID
    uint64 senderID = 1;

    // leaders term
    uint64 term = 2;

    // leader ID
    uint64 leaderID = 3;

    // index of log entry immediately preceding new ones
    uint64 prevLogIdx = 4;

    // term of prevLogIdx entry
    uint64 prevLogTerm = 5;

    // leader commit index
    uint64 leaderCommitIdx = 6;

    // log entries to commit
    repeated Entry entries = 7;
}

message VoteRequest {
    // candidate term
    uint64 term = 1;

    // sender's ID, the candidate
    uint64 candidateID = 2;

    // last log entry information
    uint64 lastLogIdx = 3;
    uint64 lastLogTerm = 4;
}

message Entry {
    uint64 term = 1;
    uint64 idx = 2;
    bytes command = 3;
}

message Node {
    uint64 ID = 1;
    string addr = 2;
}

message Response {
    uint64 senderID = 1;
    string error = 2;
    bool accepted = 3;
    uint64 term = 4;
    uint64 leaderID = 5;
    uint64 lastAppliedIdx = 6;
}

message Ack {
    uint64 senderID = 1;
}
